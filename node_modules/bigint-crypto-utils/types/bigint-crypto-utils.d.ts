export function abs(a: any): any;
export function bitLength(a: any): number;
export function eGcd(a: any, b: any): number | {
    b: any;
    x: bigint;
    y: bigint;
};
export function gcd(a: any, b: any): any;
export function isProbablyPrime(w: any, iterations?: number): Promise<any>;
export function lcm(a: any, b: any): number | bigint;
export function max(a: any, b: any): any;
export function min(a: any, b: any): any;
export function modInv(a: any, n: any): any;
export function modPow(b: any, e: any, n: any): any;
export function prime(bitLength: any, iterations?: number): Promise<any>;
export function primeSync(bitLength: any, iterations?: number): bigint;
export function randBetween(max: any, min?: bigint): bigint;
export function randBits(bitLength: any, forceLength?: boolean): Uint8Array;
export function randBytes(byteLength: any, forceLength?: boolean): Promise<any>;
export function randBytesSync(byteLength: any, forceLength?: boolean): Uint8Array;
export function toZn(a: any, n: any): any;
